node {

try{

 properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])

def mavenhome = tool name: 'maven 3.8.6'

echo "The jobName is: ${env.JOB_NAME}"
echo "The node name is: ${env.NODE_NAME}"
echo "The build number is ${env.BUILD_NUMBER}"
 stage('Ceheckoutcode'){
 git branch: 'development', credentialsId: '02b07b80-ca38-4181-b674-298b5f9d438f', url: 'https://github.com/Bharath2991/maven-web-application.git'
}
 stage('Build'){
 sh "${mavenhome}/bin/mvn package"
}
 stage('ExcuteSonarqubeReport'){
 sh "${mavenhome}/bin/mvn sonar:sonar"
 }
 stage('ArtifactoryRepo'){
 sh "${mavenhome}/bin/mvn deploy"
}
 stage('deploytheAPP'){
 sshagent(['596514ae-5fe7-4085-86e8-db798f867c92']) {
    sh "scp -o StrictHostKeyChecking=no  target/maven-web-application.war ec2-user@172.31.38.48:/opt/apache-tomcat-9.0.65/webapps/" 
}
}
}//try closing
catch(e){
  currentBuild.result="FAILURE"
  throw e
  }//catch closing
  finally{
  sendSlackNotifications(currentBuild.result)
  }
  } //Node closing
  
  //Code Snippet for sending slack notifications.

def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'
  //buildStatus = buildStatus ? "SUCCESS":"FAILURE"

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'ORANGE'
    colorCode = '#FFA500'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
   else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel:)  
}
